@page "/sponsor"
@using OdysejaAdmin.Data
@using System.Text.Json
@using System.IO
@inject RestService RestService

<div class="file has-name"
     style="display: inline-block;">
    <label class="file-label">
        <BlazorInputFile.InputFile class="file-input"
                                   OnChange="@ChooseFile"/>
        <span class="file-cta">
            <span class="file-icon">
                <i class="fas fa-upload"></i>
            </span>
            <span class="file-label">
                Wybierz plikâ€¦
            </span>
        </span>
        <span class="file-name">
            @FileName
        </span>
    </label>
</div>

<input @bind="SponsorName"
       type="text"
       class="input is-rounded"
       style="display: inline-block;"
       size="10px"/>

<button class="button is-primary"
        @onclick="SendSponsor"
        style="display: inline-block;">
    Dodaj sponsora
</button>

<table class="table">
    <thead>
    <tr>
        <th>
            <abbr>Nazwa sponsora</abbr>
        </th>
        <th>
            <abbr>Del</abbr>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var s in _sponsors)
    {
        <SponsorComponent Sponsor="@s"
                            OnDelete="@LoadData"/>
    }
    </tbody>
</table>

@code
{
    private List<Sponsor> _sponsors = new List<Sponsor>();
    private string FileName { get; set; } = "Nie wybrano pliku";
    private string SponsorName { get; set; } = "Sponsor";
    IFileListEntry file;

    private async Task ChooseFile(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        FileName = file.Name;
    }

    protected override async void OnInitialized()
    {
        await GetSponsors();
    }

    private async Task GetSponsors()
    {
        var sponsors = await RestService.Get("/sponsor");
        _sponsors = JsonSerializer.Deserialize<List<Sponsor>>(sponsors);
        StateHasChanged();
    }

    private async void SendSponsor()
    {
        var form = new MultipartFormDataContent();
        form.Add(new StringContent(SponsorName), "name");
        var fileContent = await ReadFully(file.Data);
        form.Add(new ByteArrayContent(fileContent), "image", file.Name);
        await RestService.PostForm("/sponsor", form);
        await GetSponsors();
    }

    public static async Task<byte[]> ReadFully(Stream input)
    {
        byte[] buffer = new byte[16 * 1024];
        using (MemoryStream ms = new MemoryStream())
        {
            int read;
            while ((read = await input.ReadAsync(buffer, 0, buffer.Length)) > 0)
            {
                ms.Write(buffer, 0, read);
            }
            return ms.ToArray();
        }
    }

    private async void LoadData()
    {
        await GetSponsors();
    }
}