@page "/info"
@using OdysejaAdmin.Data
@using System.Text.Json
@using System.Collections


<select @bind="_selectedCity"
        class="select">
    @foreach (var template in cities)
    {
        <option value=@template.id>@template.name</option>
    }
</select>

<select @bind="_selectedCategory"
        class="select">
    @foreach (var template in categories)
    {
        <option value=@template.id>@template.name</option>
    }
</select>

<input @bind="_newInfoName"
       type="text"
       class="input is-rounded"
       style="display: inline-block;"
       size="10px"/>

<input @bind="_infoText"
       type="text"
       class="input is-rounded"
       size="50"/>

<button class="button is-primary"
        @onclick="AddInfo"
        style="display: inline-block;">
    Dodaj info
</button>

<br/>

@* <select @bind="SelectedInfo" class="select"> *@
@*     @foreach (var info in infos) *@
@*     { *@
@*         <option value=@info.id>@info.infoName</option> *@
@*     } *@
@* </select> *@

<br/>

@code {
    private string _newInfoName = "";

    private int _selectedInfo = 0;

    private int SelectedInfo
    {
        get { return _selectedInfo; }
        set
        {
            _selectedInfo = value;
            _infoText = infos.Find(i => i.id == _selectedInfo).infoText;
            StateHasChanged();
        }
    }

    private String _infoText = "";

    private List<Info> infos = new List<Info>();

    private int _selectedCity = 0;
    private List<IdNameModel> cities = new List<IdNameModel>();
    
    private List<IdNameModel> categories = new List<IdNameModel>();
    private int _selectedCategory = 0;

    protected async override void OnInitialized()
    {
        base.OnInitialized();
        await LoadCities();
        await LoadData();
        await LoadCategories();
    }

    private async Task LoadData()
    {
        string response = await RestService.Get("/info/" + _selectedCity);
        infos = JsonSerializer.Deserialize<List<Info>>(response);
        _selectedInfo = infos[0].id;
        StateHasChanged();
    }
    
    private async Task LoadCategories()
    {
        string response = await RestService.Get("/info/category");
        categories = JsonSerializer.Deserialize<List<IdNameModel>>(response);
        _selectedCategory = categories[0].id;
        StateHasChanged();
    }

    private async Task LoadCities()
    {
        string cities = await RestService.Get("/city");
        this.cities = JsonSerializer.Deserialize<List<IdNameModel>>(cities);
        StateHasChanged();
    }

    protected async Task AddInfo()
    {
        var info = new Info(0, _newInfoName, _infoText, _selectedCity, _selectedCategory);
        await RestService.Post("/info", info);
        await LoadData();
    }

}